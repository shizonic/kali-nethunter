#!/sbin/sh
# Kali NetHunter installer

[ "$3" ] && {
	zip=$3
	console=/proc/$$/fd/$2
	# write the location of the console buffer to /tmp/console for other scripts to use
	echo "$console" > /tmp/console
} || {
	console=$(cat /tmp/console)
	[ "$console" ] || console=/proc/$$/fd/1
}

tmp=/tmp/nethunter
patchtmp=$tmp/boot-patcher
sutmp=/tmp/supersu

progress() {
	echo "set_progress $1" > $console
}

print() {
	echo "ui_print $1" > $console
	echo
}

abort() {
	[ "$1" ] && {
		print "Error: $1"
		print "Aborting..."
	}
	cleanup
	print "Failed to install Kali NetHunter!"
	exit 1
}

cleanup() {
	rm /system/.rw
	rm /data/.rw

	umount /system
	umount /data

	[ "$zip" ] && rm /tmp/console
}

install() {
	cp -r "$tmp$1" "$(dirname "$1")"
}

# installapp "App Name" "appfile.apk" "play.store.package.name"
# -> if the app package is found in the play store app database, then don't install it
installapp() {
	if [ "$3" -a -d "/data/app/$3"* ]; then
		if [ ! -f /data/data/com.android.vending/databases/localappstate.db ]; then
			echo "Could not find Play Store app database!"
		elif [ "$(strings /data/data/com.android.vending/databases/localappstate.db | grep "^$3")" ]; then
			rm -f "/data/app/$2"
			print "Found Play Store installed $1"
			return
		fi
		rm -rf "/data/app/$3"*
	fi
	print "Installing $1"
	cp -f "$tmp/data/app/$2" /data/app/ || print "Failed to install $1!"
}

extract() {
	rm -rf "$2"
	mkdir -p "$2"
	unzip -o "$1" -d "$2" || {
		abort "Unable to extract! The zip may be corrupt or your device may not have enough RAM to proceed. Consider using a smaller installer if it is available."
	}
}

setperm() {
	find "$3" -type d -exec chmod "$1" {} \;
	find "$3" -type f -exec chmod "$2" {} \;
}

symlink() {
	rm "$2"
	ln -s "$1" "$2"
}

mount() {
	mountpoint -q "$1" || /sbin/busybox mount -o rw "$1" || abort "Unable to mount $1 as rw!"
	>> "$1/.rw" && return || /sbin/busybox mount -o remount,rw "$1"
	>> "$1/.rw" && return || abort "Unable to write to $1!"
}

print "##################################################"
print "##                                              ##"
print "##  88      a8P         db        88        88  ##"
print "##  88    .88'         d88b       88        88  ##"
print "##  88   88'          d8''8b      88        88  ##"
print "##  88 d88           d8'  '8b     88        88  ##"
print "##  8888'88.        d8YaaaaY8b    88        88  ##"
print "##  88P   Y8b      d8''''''''8b   88        88  ##"
print "##  88     '88.   d8'        '8b  88        88  ##"
print "##  88       Y8b d8'          '8b 888888888 88  ##"
print "##                                              ##"
print "####  ############# NetHunter ####################"

# Unpack the installer
[ "$zip" ] && {
	print "@Unpacking the installer, this may take a while..."
	extract "$zip" "$tmp"
}
cd "$tmp"

. env.sh

progress 0.0
print "@Starting the install process"

mount /data
mount /system

progress 0.1

[ -e /data/data ] || {
	abort "Your data partition appears to be empty. Please complete the Android setup wizard before installing Kali NetHunter!"
}

setperm 0755 0755 "$tmp/tools"

# Install additional busybox applets to /sbin in case something is missing during installation
print "@Installing busybox applets to /sbin"
cp tools/busybox /sbin/busybox_nh
/sbin/busybox_nh --install /sbin

print "@Checking for previous versions of NetHunter"
sh tools/previnstall.sh

progress 0.2

[ -d "$tmp/supersu" ] && {
	print "@Installing SuperSU in system mode"
	cp -f "$tmp/supersu/vars" "/system/.supersu"
	extract "$tmp/supersu/supersu.zip" "$sutmp"

	progress 0.3

	sh "$sutmp/META-INF/com/google/android/update-binary" dummy 1 "$sutmp/supersu.zip"

	mount /data
	mount /system
}

progress 0.4

print "@Installing Apps"

installapp "NetHunter App" "nethunter.apk" "com.offsec.nethunter"
installapp "NetHunter Terminal" "Term-nh.apk" "com.offsec.nhterm"
installapp "NetHunter VNC" "VNC-nh.apk" "com.offsec.nhvnc"
installapp "cSploit" "cSploit.apk" "org.csploit.android"
installapp "BlueNMEA" "BlueNMEA.apk" "name.kellermann.max.bluenmea"
installapp "Hacker's Keyboard" "Hackerskeyboard.apk" "org.pocketworkstation.pckeyboard"
installapp "RF Analyzer" "RFAnalyzer.apk" "com.mantz_it.rfanalyzer"
installapp "Shodan" "Shodan.apk" "io.shodan.app"
installapp "USB Keyboard" "USBKeyboard.apk" "remote.hid.keyboard.client"
installapp "Router Keygen" "RouterKeygen.apk" "io.github.routerkeygen"
installapp "DriveDroid" "Drivedroid.apk" "com.softwarebakery.drivedroid"
installapp "G-MoN" "G-Mon.apk" "de.carknue.gmon2"

progress 0.5

print "@Freeing up some space on /system"
sh tools/cleansystem.sh

print "@Running busybox installer..."
sh tools/installbusybox.sh

progress 0.6

print "@Installing NetHunter wallpaper"
sh wallpaper/setwallpaper.sh

print "@Installing NetHunter boot animation"
install "/system/media/bootanimation.zip"

progress 0.7

[ -d "$tmp/system/etc/nano" ] && {
	print "Copying nano highlights to /system/etc/nano"
	setperm 0755 0644 "$tmp/system/etc/nano"
	install "/system/etc/nano"
}

[ -d "$tmp/system/etc/terminfo" ] && {
	print "Copying terminfo files to /system/etc/terminfo"
	setperm 0755 0644 "$tmp/system/etc/terminfo"
	install "/system/etc/terminfo"
}

[ -d "$tmp$LIBDIR" ] && {
	print "Copying shared libraries to $LIBDIR"
	setperm 0755 0755 "$tmp$LIBDIR"
	install "$LIBDIR"
}

[ -d "$tmp/system/bin" ] && {
	print "Installing /system/bin binaries"
	setperm 0755 0755 "$tmp/system/bin"
	install "/system/bin"
}

[ -d "$tmp/system/xbin" ] && {
	print "Installing /system/xbin binaries"
	setperm 0755 0755 "$tmp/system/xbin"
	install "/system/xbin"
}

[ -d "$tmp/system/etc/init.d" ] && {
	print "Installing init.d scripts"
	setperm 0755 0755 "$tmp/system/etc/init.d"
	install "/system/etc/init.d"
	# Create userinit.d and userinit.sh if they don't already exist
	mkdir -p "/data/local/userinit.d"
	setperm 0755 0755 "/data/local/userinit.d"
	[ -f "/data/local/userinit.sh" ] || echo "#!/system/bin/sh" > "/data/local/userinit.sh"
	chmod 0755 "/data/local/userinit.sh"
}

[ -d "$tmp/data/local" ] && {
	print "Copying additional files to /data/local"
	setperm 0755 0644 "$tmp/data/local"
	install "/data/local"
}

print "@Symlinking Kali boot scripts"
symlink "/data/data/com.offsec.nethunter/files/scripts/bootkali" "/system/bin/bootkali"
symlink "/data/data/com.offsec.nethunter/files/scripts/bootkali_init" "/system/bin/bootkali_init"
symlink "/data/data/com.offsec.nethunter/files/scripts/bootkali_login" "/system/bin/bootkali_login"
symlink "/data/data/com.offsec.nethunter/files/scripts/bootkali_bash" "/system/bin/bootkali_bash"
symlink "/data/data/com.offsec.nethunter/files/scripts/killkali" "/system/bin/killkali"

progress 0.8

[ -e "$patchtmp" ] && {
	print "@Running kernel installer..."
	sh "$patchtmp/META-INF/com/google/android/update-binary"
	mount /system
	mount /data
}

progress 0.9

print "@Running Kali chroot installer..."
sh tools/installchroot.sh

cleanup
print "************************************************"
print "*       Kali NetHunter is now installed!       *"
print "*   Don't forget to start the NetHunter app    *"
print "*       to finish setting everything up!       *"
print "************************************************"
progress 1.0
